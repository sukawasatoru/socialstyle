variables:
  CI: true
trigger:
  - master
jobs:
  - job:
    displayName: Linux
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - checkout: self
        fetchDepth: 1
      - task: NodeTool@0
        inputs:
          versionSpec: '12.x'
      - script: make -j"$(cat /proc/cpuinfo | grep -e '^processor' | wc -l)"
        displayName: Build
      - script: make -j"$(cat /proc/cpuinfo | grep -e '^processor' | wc -l)" check
        displayName: Check
  - job:
    displayName: Windows
    pool:
      vmImage: 'windows-latest'
    steps:
      - checkout: self
        fetchDepth: 1
      - task: NodeTool@0
        inputs:
          versionSpec: '12.x'
      - script: make
        displayName: Build
      - script: make check
        displayName: Check
  - job:
    displayName: macOS
    pool:
      vmImage: 'macOS-latest'
    steps:
      - checkout: self
        fetchDepth: 1
      - task: NodeTool@0
        inputs:
          versionSpec: '12.x'
      - script: make -j"$(sysctl hw.logicalcpu | cut -d' ' -f2)"
        displayName: Build
      - script: make -j"$(sysctl hw.logicalcpu | cut -d' ' -f2)" check
        displayName: Check
  - deployment:
    pool:
      vmImage: 'macOS-latest'
    variables:
      - SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
              fetchDepth: 1
            - task: NodeTool@0
              inputs:
                versionSpec: '12.x'
            - script: |
                git config user.name "Azure Pipelines"
                git config user.email sukawasatoru.github@outlook.jp
                echo "#!/bin/bash" > $PIPELINE_WORKSPACE/credential-helper.sh
                echo "username=sukawasatoru" >> $PIPELINE_WORKSPACE/credential-helper.sh
                echo "password=$SYSTEM_ACCESSTOKEN" >> $PIPELINE_WORKSPACE/credential-helper.sh
                git config credential.helper "/bin/bash $PIPELINE_WORKSPACE/credential-helper.sh"
                make -j"$(sysctl hw.logicalcpu | cut -d' ' -f2)" deploy
